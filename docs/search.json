[{"path":"https://alan-turing-institute.github.io/SPARRA/docs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). miniSPARRA01: Package (One Line, Title Case). R package version 0.0.0.9000.","code":"@Manual{,   title = {miniSPARRA01: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/index.html","id":"building-docs","dir":"","previous_headings":"","what":"Building docs","title":"What the Package Does (One Line, Title Case)","text":"R command line:","code":"install.packages(\"pkgdown\") pkgdown::build_site()"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/adjust_date_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust date formats to DD-MM-YYYY — adjust_date_format","title":"Adjust date formats to DD-MM-YYYY — adjust_date_format","text":"Adjust date formats DD-MM-YYYY","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/adjust_date_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust date formats to DD-MM-YYYY — adjust_date_format","text":"","code":"adjust_date_format(dx)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/ae2_attendances.html","id":null,"dir":"Reference","previous_headings":"","what":"ae2_attendances — ae2_attendances","title":"ae2_attendances — ae2_attendances","text":"Computes features including count AE2 records per id, number drug alcohol attendances number pysch attendances","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/ae2_attendances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ae2_attendances — ae2_attendances","text":"","code":"ae2_attendances(AE2, target_diagnosis)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/ae2_attendances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ae2_attendances — ae2_attendances","text":"AE2 data.frame including AE2 records target_diagnosis integer specifying target diagnosis number","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/ae2_attendances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ae2_attendances — ae2_attendances","text":"feature_df data.frame id num_ae2_attendances columns","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/check_for_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a filter is nested or single — check_for_nested","title":"Check if a filter is nested or single — check_for_nested","text":"Check filter nested single","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/check_for_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a filter is nested or single — check_for_nested","text":"","code":"check_for_nested(filter)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/check_for_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a filter is nested or single — check_for_nested","text":"filter filter defined origin json file","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_ae2.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleans the AE2 table. Adds the attendance_category column and populates it\nwith 1 if it doesn't exist. — clean_ae2","title":"Cleans the AE2 table. Adds the attendance_category column and populates it\nwith 1 if it doesn't exist. — clean_ae2","text":"Cleans AE2 table. Adds attendance_category column populates 1 exist.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_ae2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleans the AE2 table. Adds the attendance_category column and populates it\nwith 1 if it doesn't exist. — clean_ae2","text":"","code":"clean_ae2(ae2, patient_id_col = \"unique_study_id\")"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_ae2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleans the AE2 table. Adds the attendance_category column and populates it\nwith 1 if it doesn't exist. — clean_ae2","text":"ae2 data.frame ae2 records cleaned. following columns must exist: admission_date, diagnosis_1, diagnosis_2, diagnosis_3, well column referred patient_id_col patient_id_col name column ae2 containing patient IDs. Defaults \"unique_study_id\"","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_ae2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleans the AE2 table. Adds the attendance_category column and populates it\nwith 1 if it doesn't exist. — clean_ae2","text":"data.frame cleaned ae2 data","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_ae2_jl.html","id":null,"dir":"Reference","previous_headings":"","what":"James's version of AE2 cleaning, tidied up to avoid using files.\nMostly kept here for posterity. — clean_ae2_jl","title":"James's version of AE2 cleaning, tidied up to avoid using files.\nMostly kept here for posterity. — clean_ae2_jl","text":"James's version AE2 cleaning, tidied avoid using files. Mostly kept posterity.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_ae2_jl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"James's version of AE2 cleaning, tidied up to avoid using files.\nMostly kept here for posterity. — clean_ae2_jl","text":"","code":"clean_ae2_jl(table_ae2, patient_id_col = \"unique_study_id\")"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_ae2_jl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"James's version of AE2 cleaning, tidied up to avoid using files.\nMostly kept here for posterity. — clean_ae2_jl","text":"patient_id_col name column ae2 containing patient IDs. Defaults \"unique_study_id\" table_AE2 data.frame AE2 records cleaned. following column names must present: unique_study_id, admission_date, admission_time, transfer_discharge_date, transfer_discharge_time.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_ae2_jl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"James's version of AE2 cleaning, tidied up to avoid using files.\nMostly kept here for posterity. — clean_ae2_jl","text":"data.frame cleaned AE2 data","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_rawData.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean raw data and generate tidy versions of data tables. Will only update episodes table if force_redo = TRUE. — clean_rawData","title":"Clean raw data and generate tidy versions of data tables. Will only update episodes table if force_redo = TRUE. — clean_rawData","text":"Clean raw data generate tidy versions data tables. update episodes table force_redo = TRUE.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_rawData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean raw data and generate tidy versions of data tables. Will only update episodes table if force_redo = TRUE. — clean_rawData","text":"","code":"clean_rawData(force_redo = TRUE, dir_rawData = \".\", dir_cleanData = \".\")"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/clean_rawData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean raw data and generate tidy versions of data tables. Will only update episodes table if force_redo = TRUE. — clean_rawData","text":"force_redo Redo clean data already dir_rawData directory containing raw data tables (EHRs) dir_cleanData directory clean data tables written","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/featurise_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the number of rows per patient ID which contain specific values in\nspecific columns. — featurise_count","title":"Computes the number of rows per patient ID which contain specific values in\nspecific columns. — featurise_count","text":"Computes number rows per patient ID contain specific values specific columns.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/featurise_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the number of rows per patient ID which contain specific values in\nspecific columns. — featurise_count","text":"","code":"featurise_count(   all_tables,   source_table_file,   filter_obj,   id_column_name = \"id\",   missing_value = 0,   output_column_name )"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/featurise_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the number of rows per patient ID which contain specific values in\nspecific columns. — featurise_count","text":"all_tables List input tables (passed read_all_tables). source_table_file Filename source table read . filter_obj filter object apply source table. id_column_name Name patient ID column source table. missing_value value use patients matching rows source table. output_column_name Name output column.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/featurise_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the number of rows per patient ID which contain specific values in\nspecific columns. — featurise_count","text":"list following elements: feature_table: data frame one row per patient ID one column containing count matching rows source table. column names 'id' ID (standardised across feature tables), value output_column_name. missing_value: value use patients matching rows source table. value passed downstream function joins feature tables together.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/featurise_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Groups by ID and computes the sum of the values in all rows which pass a\ngiven filter. — featurise_sum","title":"Groups by ID and computes the sum of the values in all rows which pass a\ngiven filter. — featurise_sum","text":"Groups ID computes sum values rows pass given filter.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/featurise_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Groups by ID and computes the sum of the values in all rows which pass a\ngiven filter. — featurise_sum","text":"","code":"featurise_sum(   all_tables,   source_table_file,   filter_obj,   column_to_sum_name,   id_column_name = \"id\",   missing_value = 0,   output_column_name )"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/featurise_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Groups by ID and computes the sum of the values in all rows which pass a\ngiven filter. — featurise_sum","text":"all_tables List input tables (passed read_all_tables). source_table_file Filename source table read . filter_obj filter object apply source table. column_to_sum_name Name column provides values summed. id_column_name Name patient ID column source table. Defaults 'id'. missing_value value use patients matching rows source table. Defaults 0. output_column_name Name output column.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/featurise_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Groups by ID and computes the sum of the values in all rows which pass a\ngiven filter. — featurise_sum","text":"list following elements: feature_table: data frame one row per patient ID one column containing sum matching rows source table. column names 'id' ID (standardised across feature tables), value output_column_name. missing_value: value use patients matching rows source table. value passed downstream function joins feature tables together.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Pass table through any type of filter. — filter_all","title":"Pass table through any type of filter. — filter_all","text":"Pass table type filter.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pass table through any type of filter. — filter_all","text":"","code":"filter_all(table, filter_obj)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pass table through any type of filter. — filter_all","text":"table table filter. filter_obj filter apply table.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pass table through any type of filter. — filter_all","text":"list following elements: - passed: data frame rows passed filter - rejected: rows","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_and.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter table rows based on a logical conjunction of multiple filters (i.e.\nfilter1 AND filter2 AND ...) — filter_and","title":"Filter table rows based on a logical conjunction of multiple filters (i.e.\nfilter1 AND filter2 AND ...) — filter_and","text":"Filter table rows based logical conjunction multiple filters (.e. filter1 filter2 ...)","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_and.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter table rows based on a logical conjunction of multiple filters (i.e.\nfilter1 AND filter2 AND ...) — filter_and","text":"","code":"filter_and(table, filter_obj)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_and.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter table rows based on a logical conjunction of multiple filters (i.e.\nfilter1 AND filter2 AND ...) — filter_and","text":"table data frame filter_obj list containing following elements: - type: must '' - subfilters: list filter objects","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_and.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter table rows based on a logical conjunction of multiple filters (i.e.\nfilter1 AND filter2 AND ...) — filter_and","text":"list following elements: - passed: data frame rows passed filter - rejected: rows","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for a basic filter, parametrised over the type of\ncomparison operator used to select rows. — filter_basic","title":"Generic function for a basic filter, parametrised over the type of\ncomparison operator used to select rows. — filter_basic","text":"Generic function basic filter, parametrised type comparison operator used select rows.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for a basic filter, parametrised over the type of\ncomparison operator used to select rows. — filter_basic","text":"","code":"filter_basic(table, filter_obj)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for a basic filter, parametrised over the type of\ncomparison operator used to select rows. — filter_basic","text":"table data frame filter_obj list containing following elements: - type: must '', 'less_than', 'less_than_equal', 'greater_than', 'greater_than_equal' - column: name column filter - value: vector values filter (type ''), single value (types)","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for a basic filter, parametrised over the type of\ncomparison operator used to select rows. — filter_basic","text":"list following elements: - passed: data frame rows passed filter - rejected: rows","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_not.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter table rows based on a logical negation of a filter (i.e. NOT filter1) — filter_not","title":"Filter table rows based on a logical negation of a filter (i.e. NOT filter1) — filter_not","text":"Filter table rows based logical negation filter (.e. filter1)","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_not.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter table rows based on a logical negation of a filter (i.e. NOT filter1) — filter_not","text":"","code":"filter_not(table, filter_obj)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_not.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter table rows based on a logical negation of a filter (i.e. NOT filter1) — filter_not","text":"table data frame filter_obj list containing following elements: - type: must '' - subfilter: single filter object","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_not.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter table rows based on a logical negation of a filter (i.e. NOT filter1) — filter_not","text":"list following elements: - passed: data frame rows satisfies filter - rejected: rows","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_or.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter table rows based on a logical disjunction of multiple filters (i.e.\nfilter1 OR filter2 OR ...) — filter_or","title":"Filter table rows based on a logical disjunction of multiple filters (i.e.\nfilter1 OR filter2 OR ...) — filter_or","text":"Filter table rows based logical disjunction multiple filters (.e. filter1 filter2 ...)","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter table rows based on a logical disjunction of multiple filters (i.e.\nfilter1 OR filter2 OR ...) — filter_or","text":"","code":"filter_or(table, filter_obj)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter table rows based on a logical disjunction of multiple filters (i.e.\nfilter1 OR filter2 OR ...) — filter_or","text":"table data frame filter_obj list containing following elements: - type: must '' - subfilters: list filter objects","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/filter_or.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter table rows based on a logical disjunction of multiple filters (i.e.\nfilter1 OR filter2 OR ...) — filter_or","text":"list following elements: - passed: data frame rows passed filter - rejected: rows","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/join_feature_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Join feature tables together. — join_feature_tables","title":"Join feature tables together. — join_feature_tables","text":"Join feature tables together.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/join_feature_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join feature tables together. — join_feature_tables","text":"","code":"join_feature_tables(calculated_features)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/join_feature_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join feature tables together. — join_feature_tables","text":"calculated_features list calculated features, produced featurise_... functions","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/join_feature_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join feature tables together. — join_feature_tables","text":"data frame feature tables joined together","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/json_to_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Take the json input file and produce a formatted R object which can direct\nthe filters — json_to_feature","title":"Take the json input file and produce a formatted R object which can direct\nthe filters — json_to_feature","text":"Take json input file produce formatted R object can direct filters","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/json_to_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take the json input file and produce a formatted R object which can direct\nthe filters — json_to_feature","text":"","code":"json_to_feature(filename)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/json_to_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take the json input file and produce a formatted R object which can direct\nthe filters — json_to_feature","text":"filename relative filepath json file","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/make_raw_ae2.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a raw AE2 table. — make_raw_ae2","title":"Generate a raw AE2 table. — make_raw_ae2","text":"Generate raw AE2 table.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/make_raw_ae2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a raw AE2 table. — make_raw_ae2","text":"","code":"make_raw_ae2(n = 6, nid = 15, seed = 468)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/make_raw_ae2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a raw AE2 table. — make_raw_ae2","text":"n Number rows generate. nid Number unique study IDs generate. seed Seed random number generation.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/miniSPARRA01-package.html","id":null,"dir":"Reference","previous_headings":"","what":"miniSPARRA01: What the Package Does (One Line, Title Case) — miniSPARRA01-package","title":"miniSPARRA01: What the Package Does (One Line, Title Case) — miniSPARRA01-package","text":"Minisparra.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/miniSPARRA01-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"miniSPARRA01: What the Package Does (One Line, Title Case) — miniSPARRA01-package","text":"Maintainer: First Last first.last@example.com (ORCID)","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_header_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse the header information from the json file to our targed feature object — parse_header_info","title":"Parse the header information from the json file to our targed feature object — parse_header_info","text":"Parse header information json file targed feature object","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_header_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse the header information from the json file to our targed feature object — parse_header_info","text":"","code":"parse_header_info(feature_object, json_data)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_header_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse the header information from the json file to our targed feature object — parse_header_info","text":"feature_object R object define filtering json_data parsed json data","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_nested_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a nested filter, returns a list of type (AND/OR) followed by lists\nof the singular filters — parse_nested_filter","title":"Parse a nested filter, returns a list of type (AND/OR) followed by lists\nof the singular filters — parse_nested_filter","text":"Parse nested filter, returns list type (/) followed lists singular filters","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_nested_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a nested filter, returns a list of type (AND/OR) followed by lists\nof the singular filters — parse_nested_filter","text":"","code":"parse_nested_filter(nested_filter)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_nested_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a nested filter, returns a list of type (AND/OR) followed by lists\nof the singular filters — parse_nested_filter","text":"nested_filter nested filter defined origin json file","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_single_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a single (un-nested) filter and return a list with data column name\nfilter type, and the limiting values — parse_single_filter","title":"Parse a single (un-nested) filter and return a list with data column name\nfilter type, and the limiting values — parse_single_filter","text":"Parse single (un-nested) filter return list data column name filter type, limiting values","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_single_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a single (un-nested) filter and return a list with data column name\nfilter type, and the limiting values — parse_single_filter","text":"","code":"parse_single_filter(filter)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_single_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a single (un-nested) filter and return a list with data column name\nfilter type, and the limiting values — parse_single_filter","text":"filter filter defined origin json file","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_single_or_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a filter is nested or single and parse accordingly — parse_single_or_nested","title":"Check if a filter is nested or single and parse accordingly — parse_single_or_nested","text":"Check filter nested single parse accordingly","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/parse_single_or_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a filter is nested or single and parse accordingly — parse_single_or_nested","text":"","code":"parse_single_or_nested(filter)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/read_all_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in all tables from a list of filenames. — read_all_tables","title":"Read in all tables from a list of filenames. — read_all_tables","text":"Read tables list filenames.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/read_all_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in all tables from a list of filenames. — read_all_tables","text":"","code":"read_all_tables(filenames)"},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/read_all_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in all tables from a list of filenames. — read_all_tables","text":"filenames vector filenames.","code":""},{"path":"https://alan-turing-institute.github.io/SPARRA/docs/reference/read_all_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in all tables from a list of filenames. — read_all_tables","text":"list data frames.","code":""}]

---
title: "Prescribing example"
---

Peamble for nice formatting

```{r}
#| warning: false
install.packages("../minisparra/", repos = NULL, type = "source")
library(miniSPARRA01)

# Formatting
library(knitr)
library(kableExtra)
library(tidyverse)
kbl <- function(x) {
  x <- head(x, 10)
  x %>%
    knitr::kable(format = 'html', table.attr = 'data-quarto-disable-processing="true"') %>%
    kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
}
```

## 1. Prescribing data
```{r}
filenames <- c("../example_data/random_pis_data.csv")
all_tables <- read_all_tables(filenames)
all_tables$`../example_data/random_pis_data.csv` %>% kbl()
```
Here we have a random example prescribing data file. From the first few rows we can see that patient with id 19 had 3 items from under `bnf_section` 0106 prescribed on 15th December 2017, had 5 items from `bnf_section` 0103 prescribed oon 11th August 2016, and had 1 item from `bnf_section` 0103 on 7th July 2015.

## 2. Specification file - Number of unique
```{r}
writeLines(readLines("../example_spec/pis_data_nunique.json"))
```
This specification file is for defining the number of unique instances in the `bnf_section` column (called the "aggregation_column" in the specification) grouped by patient id. So if there were no more entries for patient 19 in the data file, then they would have 2 unique entries.
There is date filtering applied. In this case between 1st January 2015 and 1st January 2018 inclusive. 

## 3. Run transformation - Number of unique
```{r}

all_table_filenames <- c("../example_data/random_pis_data.csv")
all_feature_json_filenames <- c("../example_spec/pis_data_nunique.json")

tf <- transform(
  all_table_filenames = all_table_filenames,
  all_feature_json_filenames = all_feature_json_filenames
)

tf
```

The results of the transformation are shown above - here we patient with id 0 had 3 unique `bnf_section` and patient with id 19 ultimately ended up with 5 unique selections over the specified time period. 

## 4. Number of prescibed items
The following specification can be used to return the number of prescribed items, per patient over a specified date range.
```{r}
writeLines(readLines("../example_spec/pis_data_nprescribed.json"))
```

With the corresponding transformation
```{r}

all_table_filenames <- c("../example_data/random_pis_data.csv")
all_feature_json_filenames <- c("../example_spec/pis_data_nprescribed.json")

tf_nitems <- transform(
  all_table_filenames = all_table_filenames,
  all_feature_json_filenames = all_feature_json_filenames
)

tf_nitems
```


